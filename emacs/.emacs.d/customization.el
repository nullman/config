(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ag-arguments (list "--smart-case" "--stats") nil nil "Customized with use-package ag")
 '(alert-default-style 'libnotify nil nil "Customized with use-package alert")
 '(analog-clock-draw-function #'analog-clock-draw-analog nil nil "Customized with use-package analog-clock")
 '(ansi-color-faces-vector
   [default bold shadow italic underline bold bold-italic bold])
 '(ansi-color-names-vector
   (vector "#ffffff" "#f36c60" "#8bc34a" "#fff59d" "#4dd0e1" "#b39ddb" "#81d4fa" "#263238"))
 '(beacon-blink-delay 0.1 nil nil "Customized with use-package beacon")
 '(beacon-blink-duration 0.1 nil nil "Customized with use-package beacon")
 '(compilation-scroll-output 'next-error nil nil "Customized with use-package compile")
 '(compilation-skip-threshold 2 nil nil "Customized with use-package compile")
 '(cssm-indent-function #'cssm-c-style-indenter nil nil "Customized with use-package css-mode")
 '(doom-modeline-height 30 nil nil "Customized with use-package doom-modeline")
 '(eldoc-idle-delay 0 nil nil "Customized with use-package eldoc")
 '(elfeed-feeds
   '(("http://www.reddit.com/r/emacs.rss" emacs)
     ("http://rss.gmane.org/messages/excerpts/gmane.emacs.devel" emacs)
     ("http://planet.emacsen.org/atom.xml" emacs)
     ("http://emacsredux.com/atom.xml" emacs)
     ("http://whattheemacsd.com/atom.xml" emacs)
     ("http://www.lunaryorn.com/feed.atom" emacs)
     ("http://endlessparentheses.com/atom.xml" emacs)
     ("http://nullprogram.com/feed/" emacs)
     ("http://www.masteringemacs.org/feed/" emacs)
     ("http://sachachua.com/blog/feed/" emacs)
     ("http://kitchingroup.cheme.cmu.edu/blog/feed/index.xml" emacs)
     ("http://www.reddit.com/r/linux.rss" linux)
     ("https://www.linuxjournal.com/node/feed" linux)
     ("https://www.archlinux.org/feeds/news/" linux)
     ("https://forum.manjaro.org/c/announcements.rss" linux)
     ("http://planet.ubuntu.com/rss20.xml" linux)
     ("http://feeds.feedburner.com/codinghorror?format=xml" linux)
     ("https://www.linuxfoundation.org/feed/" linux)
     ("https://www.linux-magazine.com/rss/feed/lmi_news" linux)
     ("https://linux.softpedia.com/backend.xml" linux)
     ("https://www.distrotube.com/videos/index.xml" linux)
     ("http://slashdot.org/slashdot.rss" dev)
     ("http://news.ycombinator.com/rss" dev)
     ("http://feeds.arstechnica.com/arstechnica/index/" dev)
     ("http://feeds.twit.tv/twit_video_hd.xml" dev)
     ("https://www.howtogeek.com/feed/" dev)
     ("http://feeds.feedburner.com/codinghorror?format=xml" dev)
     ("http://lunduke.com/index.xml" dev)
     ("https://www.cyberciti.biz/atom/atom.xml" dev)
     ("https://www.tecmint.com/feed/" dev)
     ("https://lukesmith.xyz/rss.xml" dev)
     ("https://bytecellar.com/feed" vintage)
     ("https://nerd.fail/feed/" vintage)
     ("http://bitemyapp.com/atom.xml" dev)
     ("http://open.blogs.nytimes.com/feed/" blog)
     ("https://xkcd.com/atom.xml" comic)
     ("http://nulldot.net/index.rss" dev)) nil nil "Customized with use-package elfeed")
 '(elfeed-search-filter "-junk +unread" nil nil "Customized with use-package elfeed")
 '(enable-recursive-minibuffers t nil nil "Customized with use-package ivy")
 '(fci-rule-color "#37474f")
 '(flyspell-issue-welcome-flag nil nil nil "Customized with use-package flyspell")
 '(flyspell-sort-corrections nil nil nil "Customized with use-package flyspell")
 '(flyspell-use-meta-tab nil nil nil "Customized with use-package flyspell")
 '(hl-sexp-background-color "#1c1f26")
 '(ivy-count-format "(%d/%d) " nil nil "Customized with use-package ivy")
 '(ivy-use-virtual-buffers t nil nil "Customized with use-package ivy")
 '(langtool-java-classpath
   (concat "/usr/share/java/languagetool" ":/usr/share/java/languagetool/*" ":/usr/share/languagetool" ":/usr/share/languagetool/*") nil nil "Customized with use-package langtool")
 '(neo-smart-open t nil nil "Customized with use-package neotree")
 '(org-agenda-files
   '("~/.common/org/personal.org" "/home/kyle/org/agenda-personal-timeline.org" "/home/kyle/org/agenda-personal.org" "/home/kyle/org/agenda-work.org"))
 '(org-structure-template-alist
   '(("c" . "center")
     ("C" . "comment")
     ("e" . "example")
     ("E" . "export")
     ("ea" . "export ascii")
     ("eh" . "export html")
     ("el" . "export latex")
     ("q" . "quote")
     ("s" . "src")
     ("sel" . "src emac-lisp")
     ("sk" . "src kotlin")
     ("spy" . "src python")
     ("sr" . "src racket")
     ("ssh" . "src sh")
     ("ssu" . "src sh :dir /sudo::")
     ("v" . "verse")) nil nil "Customized with use-package org-tempo")
 '(org-tempo-keywords-alist
   '(("A" . "ascii")
     ("H" . "html")
     ("i" . "index")
     ("L" . "latex")
     ("n" . "name")) nil nil "Customized with use-package org-tempo")
 '(org-wild-notifier-alert-time '(1 10 30) nil nil "Customized with use-package org-wild-notifier")
 '(org-wild-notifier-keyword-whitelist '("TODO" "NEXT") nil nil "Customized with use-package org-wild-notifier")
 '(org-wild-notifier-notification-title "Org Reminder" nil nil "Customized with use-package org-wild-notifier")
 '(package-selected-packages
   '(geiser-racket geiser magit-section git-commit with-editor ob-tangle org-table subr-x cl-macs dired-hide-dotfiles dired-open dired-hacks-utils all-the-icons-dired eshell-git-prompt vterm org-notify org-plus-contrib org-alert frame-local treemacs cfrs posframe pfuture ace-window typescript-mode ht forge ghub treepy closql emacsql-sqlite emacsql counsel-projectile ivy-prescient prescient wgrep flx ivy-hydra ivy-rich counsel helpful elisp-refs dash-functional multiple-cursors vimish-fold lua-mode shrink-path all-the-icons memoize calendar-remind ox ob-python ob-java org-src command-log-mode ob-shell swiper-helm swiper xterm-color transient dash js2-mode inf-ruby flycheck company bind-key async beacon quelpa yasnippet-snippets xref-js2 wttrin wtf which-key weblogger web-query w3m undo-tree switch-window sudoku split-move spinner sokoban smex slime simple-mpc robe replacer regex-tool quelpa-use-package python-mode ps-ccrypt projectile powerline popwin plantuml-mode pivotal-tracker persistent-scratch org-pdfview openwith omni-quotes ob-kotlin ob-ipython ob-async neotree mingus markdown-mode magit-popup magit ledger-mode langtool kotlin-mode keyfreq key-chord json-mode js2-refactor js-comint jedi ivy ini-mode ini iedit hydra hungry-delete htmlize helm graphviz-dot-mode gnuplot fuzzy flymake-cursor flycheck-kotlin flatland-theme expand-region erlang epoch eperiodic elpy elpher elnode elisp-slime-nav elfeed easy-kill dired-single diminish demo-it define-word decimation cycle-buffer centered-cursor-mode browse-kill-ring brainfuck boxquote bbdb basic bash-completion avy auto-menu auto-compile anzu any-ini-mode analog-clock alert aggressive-indent ag))
 '(recentf-max-menu-items 25 nil nil "Customized with use-package recentf")
 '(safe-local-variable-values
   '((org-babel-noweb-wrap-end . "}}}")
     (org-babel-noweb-wrap-start . "{{{")
     (hl-sexp-mode)
     (rainbow-mode . t)))
 '(save-abbrevs 'silently nil nil "Customized with use-package abbrev")
 '(sokoban-levels-dir
   (expand-file-name "sokoban/sokoban-levels" emacs-modules-dir) nil nil "Customized with use-package sokoban")
 '(switch-window-shortcut-style 'qwerty nil nil "Customized with use-package switch-window")
 '(tramp-default-method "ssh" nil nil "Customized with use-package tramp")
 '(vc-annotate-background nil)
 '(vc-annotate-color-map
   '((20 . "#f36c60")
     (40 . "#ff9800")
     (60 . "#fff59d")
     (80 . "#8bc34a")
     (100 . "#81d4fa")
     (120 . "#4dd0e1")
     (140 . "#b39ddb")
     (160 . "#f36c60")
     (180 . "#ff9800")
     (200 . "#fff59d")
     (220 . "#8bc34a")
     (240 . "#81d4fa")
     (260 . "#4dd0e1")
     (280 . "#b39ddb")
     (300 . "#f36c60")
     (320 . "#ff9800")
     (340 . "#fff59d")
     (360 . "#8bc34a")))
 '(vc-annotate-very-old-color nil)
 '(w3m-icon-directory "/usr/share/emacs-w3m/icon" nil nil "Customized with use-package w3m")
 '(w3m-use-cookies t nil nil "Customized with use-package w3m")
 '(weblogger-config-alist
   `(("nullman" "http://www.blogger.com/api" ,user-mail-address "" "6007591")
     ("Nullman on Life" "http://www2.blogger.com/api" ,user-mail-address "" "6007591")) nil nil "Customized with use-package weblogger")
 '(wttrin-default-accept-language '("Accept-Language" . "en-US") nil nil "Customized with use-package wttrin")
 '(wttrin-default-cities '("Austin" "London" "Minneapolis" "New York" "San Diego") nil nil "Customized with use-package wttrin"))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(cursor ((t (:background "yellow"))))
 '(org-block ((t (:inherit shadow :foreground "green"))))
 '(org-level-1 ((t (:foreground "orange"))))
 '(org-level-2 ((t (:foreground "deep sky blue"))))
 '(org-level-3 ((t (:foreground "yellow green"))))
 '(org-level-4 ((t (:foreground "salmon"))))
 '(org-level-5 ((t (:foreground "orchid"))))
 '(org-level-6 ((t (:foreground "cyan"))))
 '(org-level-7 ((t (:foreground "spring green"))))
 '(org-level-8 ((t (:foreground "tomato"))))
 '(whitespace-tab ((t (:foreground "green" :background "black")))))
