#===============================================================================
# .config/sxhkd/sxhkdrc
#
# Simple X Hotkey Daemon Configuration
#
# To specify a key, you can use 'xbindkeys --key' or 'xbindkeys --multikey'
# and put one of the two lines in this file. Or use 'xev -event keyboard' to
# get the keysym names.
#
# General syntax:
#
#   HOTKEY
#       [;]COMMAND
#
#   HOTKEY      := CHORD_1 ; CHORD_2 ; ... ; CHORD_n
#   CHORD_i     := [MODIFIERS_i +] [~][@]KEYSYM_i
#   MODIFIERS_i := MODIFIER_i1 + MODIFIER_i2 + ... + MODIFIER_ik
#
# The valid modifier names are: super, hyper, meta, alt, control, ctrl, shift,
# mode_switch, lock, mod1, mod2 (NumLock), mod3 (CapsLock), mod4, mod5
# (Scroll) and any.
#
# The keysym names are given by the output of 'xev -event keyboard'.
#
# Hotkeys and commands can be spread across multiple lines by ending each
# partial line with a backslash character.
#
# When multiple chords are separated by semicolons, the hotkey is a chord
# chain: the command will only be executed after receiving each chord of the
# chain in consecutive order.
#
# The colon character can be used instead of the semicolon to indicate that
# the chord chain shall not be aborted when the chain tail is reached.
#
# If a command starts with a semicolon, it will be executed synchronously,
# otherwise asynchronously.
#
# The Escape key can be used to abort a chord chain.
#
# If @ is added at the beginning of the keysym, the command will be run on key
# release events, otherwise on key press events.
#
# If ~ is added at the beginning of the keysym, the captured event will be
# replayed for the other clients.
#
# Pointer hotkeys can be defined by using one of the following special keysym
# names: button1, button2, button3, ..., button24.
#
# The hotkey and the command may contain sequences of the form
# {STRING_1,...,STRING_N}.
#
# In addition, the sequences can contain ranges of the form A-Z where A and Z
# are alphanumeric characters.
#
# The underscore character represents an empty sequence element.
#
# Author: Kyle W T Sherman <kylewsherman@gmail.com>
#
# Reference: https://github.com/baskerville/sxhkd
# Reference: https://gitlab.com/protesilaos/dotfiles/-/blob/v2.2.0/bspwm/.config/sxhkd/sxhkdrc
# Reference: https://gitlab.com/protesilaos/dotfiles/-/blob/v2.2.0/bspwm/.config/sxhkd/sxhkdrc_bspc
# Reference: https://my-take-on.tech/2020/07/03/some-tricks-for-sxhkd-and-bspwm/
#===============================================================================

#-------------------------------------------------------------------------------
# Remappings
#-------------------------------------------------------------------------------

# arrow keys for page-up, page-down, home, and end
control + alt + {Up,Down,Left,Right}
    xvkbd -xsendevent -text '\[{Prior,Next,Home,End}]'

#-------------------------------------------------------------------------------
# Mouse
#-------------------------------------------------------------------------------

# mouse for page-up and page-down
{button9,button8}
    xvkbd -xsendevent -text '\[{Prior,Next}]'

#-------------------------------------------------------------------------------
# Media Keys
#-------------------------------------------------------------------------------

# audio mute ???

# sound down ???

# sound up ???

# XF86AudioMicMute

XF86MonBrightnessUp
    xbacklight -inc 10 && notify-send --expire-time=2000 'Brightness Up'

XF86MonBrightnessDown
    xbacklight -dec 10 && notify-send --expire-time=2000 'Brightness Down'

# XF86Display

# XF86WLAN

# XF86Tools

# XF86Bluetooth

# XF86Favorites

XF86TouchpadToggle
    touchpad-toggle && notify-send --expire-time=2000 'Toggle Touchpad'

# XF86AudioPlay
#     playerctl play && notify-send --expire-time=2000 'Play Audio'

# XF86AudioPause
#     playerctl pause && notify-send --expire-time=2000 'Pause Audio'

# XF86AudioNext
#     playerctl next && notify-send --expire-time=2000 'Next Song'

# XF86AudioPrev
#     playerctl previous && notify-send --expire-time=2000 'Previous Song'

#-------------------------------------------------------------------------------
# System Tools
#-------------------------------------------------------------------------------

# display sxhkd keybindings
super + alt + h
    yad --text-info --width=1024 --height=768 --no-buttons --fontname="Droid Sans Mono 12" --tail --filename="${HOME}/.config/sxhkd/sxhkdrc-help"

# desktop application launcher
super + alt + space
    rofi -modi drun -show drun

# program launcher
super + alt + d
    rofi -modi run -show run

# menu launcher
super + alt + Return
    ${HOME}/bin/rofi-menu

# window selector
super + alt + w
    rofi -modi window -show window

# clipmenu selector
super + alt + c
    CM_LAUNCHER=rofi clipmenu

# emoji selector
super + alt + j
    rofi -modi emoji -show emoji

# bitwarden selector (clear clipboard after 30 seconds)
super + alt + p
    bwmenu --clear 30

# generate password
super + ctrl + p
    tr --delete --complement 'a-zA-Z0-9!@#$%^&*-_=+;:,<.>/?' < /dev/urandom | \
    head --bytes 14 | xclip -selection clipboard && \
    notify-send --expire-time=2000 'Random password generated on clipboard'

# paste selector
super + alt + apostrophe
    ${HOME}/bin/rofi-menu paste

# display time
super + alt + backslash
    echo "$(date '+%Y-%m-%d')\n $(date '+%H:%M:%S')" | yad --text-info --width=520 --height=240 --no-buttons --timeout=3 --fontname="Droid Sans Mono 64"

# edit with emacs
super + alt + e
    emacsclient --eval '(emacs-everywhere)'

# git synchronize config
super + alt + y
    source "${HOME}/.funct" && (git-sync-config && echo "Done") 2>&1 | yad --text-info --width=1024 --height=768 --no-buttons --fontname="Droid Sans Mono 12" --tail

# git synchronize extra
super + alt + u
    source "${HOME}/.funct" && (git-sync-extra && echo "Done") 2>&1 | yad --text-info --width=1024 --height=768 --no-buttons --fontname="Droid Sans Mono 12" --tail

# start screen saver
super + alt + s
    xscreensaver-command -activate

# start screen saver in lock mode
super + alt + x
    xscreensaver-command -lock
#    xlock
#    xlock -mode flame
#    ssaverauto --lock
#    xscreensaver-command -lock

# session menu
super + shift + e
    ${HOME}/bin/rofi-session-menu -s

# get xprop class name
super + shift + p
    xprop | grep '^WM_CLASS' | yad --text-info --width=1024 --height=768 --no-buttons --fontname="Droid Sans Mono 12" --tail

# kill process clicked
super + shift + Delete
    xkill

# snapshot of entire screen
super + alt + Print
    scrot --exec 'mv $f ~/Pictures/' && notify-send --expire-time=2000 'Screen snapshot saved'

# snapshot of active window
super + ctrl + Print
    scrot --focused --exec 'mv $f ~/Pictures/' && notify-send --expire-time=2000 'Window snapshot saved'

# snapshot of selected region
super + shift + Print
    scrot --select --freeze --exec 'mv $f ~/Pictures/' && notify-send --expire-time=2000 'Region snapshot saved'

# reload sxhkd
super + shift + r
    pkill -SIGUSR1 -x sxhkd -u ${USER} && notify-send --expire-time=2000 'Reloading sxhkd'

# reload tint2
super + shift + t
    ((pkill -SIGUSR1 -x tint2 -u ${USER} &&
    xdo below -t $(xdo id -N Bspwm) $(xdo id -N Tint2)) || ${HOME}/bin/system-bar &) && notify-send --expire-time=2000 'Reloading Tint'
    #xdo below -t $(xdo id -n root) $(xdo id -N Tint2)) || ${HOME}/bin/system-bar &) && notify-send --expire-time=2000 'Reloading Tint'

# reset video
super + shift + v
    xrandr --output $(xrandr | grep ' connected ' | sed 's/ .*//' | head -n 1) --auto && notify-send --expire-time=2000 'Resetting video'

# connect to beats headphones via bluetooth
super + alt + b
    notify-send --expire-time=2000 'Connecting to Beats Headphones via Bluetooth' && \
    bluetoothctl connect 04:88:E2:6A:00:6C

#-------------------------------------------------------------------------------
# Media
#-------------------------------------------------------------------------------

# volume control
# super + alt + ctrl + {Left,Right}
#     pactl -- set-sink-volume 0 {-,+}10% && aplay "${HOME}/sounds/test.wav"
super + alt + ctrl + Left
    pactl -- set-sink-volume 0 -10% && notify-send --expire-time=2000 'Volume Down 10%' && aplay "${HOME}/sounds/test.wav"
super + alt + ctrl + Right
    pactl -- set-sink-volume 0 +10% && notify-send --expire-time=2000 'Volume Up 10%' && aplay "${HOME}/sounds/test.wav"

# mpc control
super + alt + ctrl + m
    mpc toggle && notify-send --expire-time=3000 --icon='/usr/share/icons/Papirus/16x16/apps/mpd.svg' "$(${HOME}/bin/mpc-playing)"
super + alt + ctrl + comma
    mpc prev && notify-send --expire-time=3000 --icon='/usr/share/icons/Papirus/16x16/apps/mpd.svg' "$(${HOME}/bin/mpc-playing)"
super + alt + ctrl + period
    mpc next && notify-send --expire-time=3000 --icon='/usr/share/icons/Papirus/16x16/apps/mpd.svg' "$(${HOME}/bin/mpc-playing)"
super + alt + ctrl + slash
    notify-send --expire-time=3000 --icon='/usr/share/icons/Papirus/16x16/apps/mpd.svg' "$(${HOME}/bin/mpc-playing)"

# mpc control (media keys)
XF86AudioPrev
    mpc prev && notify-send --expire-time=3000 --icon='/usr/share/icons/Papirus/16x16/apps/mpd.svg' "$(${HOME}/bin/mpc-playing)"
XF86AudioPlay
    mpc play && notify-send --expire-time=3000 --icon='/usr/share/icons/Papirus/16x16/apps/mpd.svg' "$(${HOME}/bin/mpc-playing)"
XF86AudioStop
    mpc stop && notify-send --expire-time=3000 --icon='/usr/share/icons/Papirus/16x16/apps/mpd.svg' "$(${HOME}/bin/mpc-playing)"
XF86AudioNext
    mpc next && notify-send --expire-time=3000 --icon='/usr/share/icons/Papirus/16x16/apps/mpd.svg' "$(${HOME}/bin/mpc-playing)"

# # spotify control
# Shift+Alt + a
#     dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous && notify-send --expire-time=3000 --icon='/usr/share/icons/Papirus/16x16/apps/mpd.svg' "$(${HOME}/bin/spotify-playing)
# Shift+Alt + s
#     dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause && notify-send --expire-time=3000 --icon='/usr/share/icons/Papirus/16x16/apps/mpd.svg' "$(${HOME}/bin/spotify-playing)
# Shift+Alt + d
#     dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Stop && notify-send --expire-time=3000 --icon='/usr/share/icons/Papirus/16x16/apps/mpd.svg' "$(${HOME}/bin/spotify-playing)"
# Shift+Alt + f
#     dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next && notify-send --expire-time=3000 --icon='/usr/share/icons/Papirus/16x16/apps/mpd.svg' "$(${HOME}/bin/spotify-playing)"
# XF86AudioPrevious
#     dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous && notify-send --expire-time=3000 --icon='/usr/share/icons/Papirus/16x16/apps/mpd.svg' "$(${HOME}/bin/spotify-playing)"
# XF86AudioPlay
#     dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause && notify-send --expire-time=3000 --icon='/usr/share/icons/Papirus/16x16/apps/mpd.svg' "$(${HOME}/bin/spotify-playing)"
# XF86AudioStop
#     dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Stop && notify-send --expire-time=3000 --icon='/usr/share/icons/Papirus/16x16/apps/mpd.svg' "$(${HOME}/bin/spotify-playing)"
# XF86AudioNext
#     dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next && notify-send --expire-time=3000 --icon='/usr/share/icons/Papirus/16x16/apps/mpd.svg' "$(${HOME}/bin/spotify-playing)"
#  dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous && notify-send --expire-time=3000 --icon='/usr/share/icons/Papirus/16x16/apps/mpd.svg' "$(${HOME}/bin/spotify-playing)"

# media player control
super + alt + ctrl + z
    qdbus org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous && notify-send --expire-time=3000 --icon='/usr/share/icons/Papirus/16x16/apps/mpd.svg' "$(${HOME}/bin/spotify-playing)"
super + alt + ctrl + c
    qdbus org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause && notify-send --expire-time=3000 --icon='/usr/share/icons/Papirus/16x16/apps/mpd.svg' "$(${HOME}/bin/spotify-playing)"
super + alt + ctrl + x
    qdbus org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Stop && notify-send --expire-time=3000 --icon='/usr/share/icons/Papirus/16x16/apps/mpd.svg' "$(${HOME}/bin/spotify-playing)"
super + alt + ctrl + b
    qdbus org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next && notify-send --expire-time=3000 --icon='/usr/share/icons/Papirus/16x16/apps/mpd.svg' "$(${HOME}/bin/spotify-playing)"
super + alt + ctrl + apostrophe
    notify-send --expire-time=3000 --icon='/usr/share/icons/Papirus/16x16/apps/mpd.svg' "$(${HOME}/bin/spotify-playing)"

#-------------------------------------------------------------------------------
# Applications
#-------------------------------------------------------------------------------

# terminal
super + alt + t
    alacritty

#===============================================================================
# End of File
#===============================================================================
