#===============================================================================
# .config/sxhkd/sxhkdrc-bspwm
#
# Simple X Hotkey Daemon Configuration for BSPWM
#
# To specify a key, you can use 'xbindkeys --key' or 'xbindkeys --multikey'
# and put one of the two lines in this file. Or use 'xev -event keyboard' to
# get the keysym names.
#
# General syntax:
#
#   HOTKEY
#       [;]COMMAND
#
#   HOTKEY      := CHORD_1 ; CHORD_2 ; ... ; CHORD_n
#   CHORD_i     := [MODIFIERS_i +] [~][@]KEYSYM_i
#   MODIFIERS_i := MODIFIER_i1 + MODIFIER_i2 + ... + MODIFIER_ik
#
# The valid modifier names are: super, hyper, meta, alt, control, ctrl, shift,
# mode_switch, lock, mod1, mod2 (NumLock), mod3 (CapsLock), mod4, mod5
# (Scroll) and any.
#
# The keysym names are given by the output of 'xev -event keyboard'.
#
# Hotkeys and commands can be spread across multiple lines by ending each
# partial line with a backslash character.
#
# When multiple chords are separated by semicolons, the hotkey is a chord
# chain: the command will only be executed after receiving each chord of the
# chain in consecutive order.
#
# The colon character can be used instead of the semicolon to indicate that
# the chord chain shall not be aborted when the chain tail is reached.
#
# If a command starts with a semicolon, it will be executed synchronously,
# otherwise asynchronously.
#
# The Escape key can be used to abort a chord chain.
#
# If @ is added at the beginning of the keysym, the command will be run on key
# release events, otherwise on key press events.
#
# If ~ is added at the beginning of the keysym, the captured event will be
# replayed for the other clients.
#
# Pointer hotkeys can be defined by using one of the following special keysym
# names: button1, button2, button3, ..., button24.
#
# The hotkey and the command may contain sequences of the form
# {STRING_1,...,STRING_N}.
#
# In addition, the sequences can contain ranges of the form A-Z where A and Z
# are alphanumeric characters.
#
# The underscore character represents an empty sequence element.
#
# Author: Kyle W T Sherman <kylewsherman@gmail.com>
#
# Reference: https://github.com/baskerville/sxhkd
# Reference: https://gitlab.com/protesilaos/dotfiles/-/blob/v2.2.0/bspwm/.config/sxhkd/sxhkdrc
# Reference: https://gitlab.com/protesilaos/dotfiles/-/blob/v2.2.0/bspwm/.config/sxhkd/sxhkdrc_bspc
# Reference: https://my-take-on.tech/2020/07/03/some-tricks-for-sxhkd-and-bspwm/
#===============================================================================

#-------------------------------------------------------------------------------
# General
#-------------------------------------------------------------------------------

# display sxhkd-bspwm keybindings
super + ctrl + h
    yad --text-info --width=1024 --height=768 --no-buttons --fontname='MesloLGS Nerd Font Mono 14' --tail --filename="${HOME}/.config/sxhkd/sxhkdrc-bspwm-help"

# display bspwm manual
super + shift + h
    man bspwm | yad --text-info --width=1024 --height=768 --no-buttons --fontname='MesloLGS Nerd Font Mono 14' --tail

# close/kill active program
super + shift + {w,k}
    bspc node --{close,kill}

#-------------------------------------------------------------------------------
# State and Flags
#-------------------------------------------------------------------------------

# set window state
super + ctrl + {t,shift + t,f,shift + f}
    bspc node --state {tiled,pseudo_tiled,fullscreen,floating}

# # set node flags
# super + ctrl + {m,x,y,z}
#     bspc node --flag {marked,locked,sticky,private}

# alternate between tiled/stacked and monocle layout
super + ctrl + m
    bspc desktop --layout next

# alternate between tiled and stacked layout
super + ctrl + shift + m
    bspc desktop --stacked

#-------------------------------------------------------------------------------
# Focus and Swap
#-------------------------------------------------------------------------------

# focus/swap node in given direction in current desktop
super + {_,shift + }{i,k,j,l}
    bspc node --{focus,swap} {north,south,west,east}
super + {_,shift + }{Up,Down,Left,Right}
    bspc node --{focus,swap} {north,south,west,east}

# rotate/swap nodes in given direction in current desktop
super + {_,shift + }{comma,period}
    bspc node {'focused.!floating.!fullscreen.window#@/' --circulate,--swap} {backward,forward}
    #bspc node {@/ --circulate,--swap} {backward,forward}

# swap node with first child node in current desktop
super + shift + g
    bspc node --swap first.local

# # focus node for given path jump
# super + {p,b,comma,period}
#     bspc node --focus {parent,brother,first,second}

# focus next/previous desktop in current monitor
super + alt + {j,l}
    bspc desktop --focus {prev,next}.local
super + alt + {Left,Right}
    bspc desktop --focus {prev,next}.local

# send focused node to next/previous desktop in current monitor and follow
super + alt + shift + {j,l}
    bspc node --to-desktop {prev,next}.local --follow
super + alt + shift + {Left,Right}
    bspc node --to-desktop {prev,next}.local --follow

# focus next/previous monitor
super + alt + {i,k}
    bspc monitor --focus {prev,next}
super + alt + {Up,Down}
    bspc monitor --focus {prev,next}

# send focused node to next/previous monitor
super + alt + shift + {i,k}
    bspc node --to-monitor {prev,next} --follow
super + alt + shift + {Up,Down}
    bspc node --to-monitor {prev,next} --follow

# focus next/previous node in current desktop
alt + {_,shift + }Tab
    bspc node --focus {next,prev}.local.leaf

# # focus next/previous node in all desktops and monitors
# super + {_,shift + }Tab
#     bspc node --focus {next,prev}

# focus older/newer node in focus history in all desktops and monitors
super + {_,shift + }Tab
    bspc wm --record-history off ; \
    bspc node --focus {older,newer}.leaf ; \
    bspc wm --record-history on

# focus last node/desktop
{alt,super} + grave
    bspc {node -f last.leaf,desktop -f last}

# focus given desktop
super + {1-9,0}
    bspc desktop --focus '^{1-9,10}'

# send focused node to given desktop and follow
super + shift + {1-9,0}
    bspc node --to-desktop '^{1-9,10}' --follow

#-------------------------------------------------------------------------------
# Preselect
#-------------------------------------------------------------------------------

# preselect direction
super + ctrl + {i,k,j,l}
    bspc node --presel-dir {north,south,west,east}

# preselect ratio
super + ctrl + {1-9}
    bspc node --presel-ratio 0.{1-9}

# send current window to preselected space
super + shift + m
    bspc node --to-node last.!automatic --follow

# cancel preselection for focused node
super + ctrl + space
    bspc node --presel-dir cancel

# # cancel preselection for focused desktop
# super + ctrl + shift + space
#     bspc query --nodes --desktop | xargs -I id --max-args=1 bspc node id --presel-dir cancel

#-------------------------------------------------------------------------------
# Move and Resize
#-------------------------------------------------------------------------------

# resize window:
#   outward with lowercase i/k/j/l keys
#   inward with uppercase I/K/J/L keys
# move floating window with arrow keys
super + ctrl + s : {i,k,j,l,I,K,J,L,Up,Down,Left,Right}
    n=20 ; \
    bspc node \
    { --resize top      0 -$n , \
      --resize bottom   0  $n , \
      --resize left   -$n   0 , \
      --resize right   $n   0 , \
      --resize top      0  $n , \
      --resize bottom   0 -$n , \
      --resize left    $n   0 , \
      --resize right  -$n   0 , \
      --move            0 -$n , \
      --move            0  $n , \
      --move          -$n   0 , \
      --move           $n   0 }

# balance windows in current desktop
super + ctrl + b
    bspc node @/ --balance

# equalize windows in current desktop
super + ctrl + e
    bspc node @/ --equalize

# # move a floating window
# super + ctrl + {Up,Down,Left,Right}
#     bspc node --move {0 -20,0 20,-20 0,20 0}

# move and resize using mouse
super + button{1,2,3}
    bspc grab_pointer {move,resize_side,resize_corner}

super + !button{1,2,3}
    bspc {track_pointer,track_pointer,track_pointer} %i %i

super + @button{1,2,3}
    bspc {ungrab_pointer,ungrab_pointer,ungrab_pointer}

#===============================================================================
# End of File
#===============================================================================
