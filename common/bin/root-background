#!/usr/bin/env bash
#===============================================================================
# root-background
#
# Run various applications in the root window.
#
# Author: Kyle W T Sherman <kylewsherman@gmail.com>
#===============================================================================

if [ $# -lt 1 ] || [ "$1" == "-h" ] || [ "$1" == "--help" ] ; then
    cat <<EOF
Usage: $(basename $0) APPLICATION [OPTION...] [PARAMETER...]
Run APPLICATION in the root window.
  APPLICATION options:
    xplanet MODE [PARMETER]...
      MODE       random, earth, earth_clouds, eclipse, saturn
      PARAMETER  any additional xplanet parameter
                 e.g. -output \"img.png\" -geometry 1024x768
    xplanetr MODE LONGITUDE [PARAMETER]...
      MODE       [same as above]
      LONGITUDE  current longitude in rotation
      PARAMETER  any additional xplanet parameters
    xfishtank
    xpenguins [MODE]
      MODE  default, big, bill
See root_background_list file for more applications.
EOF
    exit 1
fi

# list file
listfile=${HOME}/bin/root_background_list

# center on us
latitude=20
longitude=267
incremental=6

# center on mn
#latitude=45
#longitude=267

# wait
wait=60

# addons
addons=

# numtimes
numtimes=

# gnome desktop
if [ -z "$(ps -ef | grep -v grep | grep ${USER} | grep gnome-session)" ] ; then
    gnome=
else
    gnome=yes
fi
_gnomebg() {
    # move gnome background (to get gnome to notice)
    local img1="${HOME}/images/background1.png"
    local img2="${HOME}/images/background2.png"
    local geometry=1280x1024
    if [ -e "${img1}" ] ; then
        local imgo="${img1}"
        local img="${img2}"
    else
        local imgo="${img2}"
        local img="${img1}"
    fi
    # create new background
    local numtimes=1
    local gaddons="-output \"${img}\" -geometry=${geometry}"
    eval ${cmd} -num_times ${numtimes} ${addons} ${gaddons} "$@"
    # set gnome background
    gconftool -t str -s /desktop/gnome/background/picture_filename "${img}"
    # delete old background
    rm -f "${imgo}"
    # wait
    sleep ${wait}
}

# get app
app="$1"
shift

# get mode or set to default
if [ $# -eq 0 ] ; then
    mode=default
else
    mode="$1"
    shift
fi

# see if we are rotating xplanet
rot=
if [ "${app}" == "xplanetr" ] ; then
    app=xplanet
    rot=yes
    numtimes=2
fi
# see if we are rotating fast
if [ "${app}" == "xplanetrf" ] ; then
    app=xplanet
    rot=yes
    numtimes=2
    incremental=1
    wait=10
fi
# see if we are rotating very fast
if [ "${app}" == "xplanetrvf" ] ; then
    app=xplanet
    rot=yes
    numtimes=2
    incremental=.4
    wait=4
fi

#fuser -k -SIGTERM /usr/bin/xplanet >/dev/null 2>&1
#fuser -k -SIGKILL /usr/bin/xplanet >/dev/null 2>&1
# if the app is already running we exit
[ -z "$(ps -ef | grep -v grep | grep -v \"$0\" | grep ${USER} | grep \"${app}\")" ] || exit 1
sleep 2
[ -z "$(ps -ef | grep -v grep | grep -v "$0" |  grep ${USER} | grep \"${app}\")" ] || exit 1

# check for certain random modes
if [ "${app}" == "xplanet" ] ; then
    modes=(earth earth_moon eclipse saturn jupiter_moons jupiter_moons_close)
    if [ "${mode}" == "random" ] || [ "${mode}" == "default" ] ; then
        num=${#modes[@]}
        rand=$(($(date '+%s') % ${num}))
        mode=${modes[rand]}
    fi
fi

# get the command to run
cmd="$(grep -v '#' "${listfile}" | grep "${app}|" | grep "|${mode}|" | sed 's/.*|.*|//')"
if [ -z "${cmd}" ] ; then
    exit 1
fi
cmd="nice ${cmd}"

# run the command
if [ "${app}" == "xplanet" ] ; then
    # handle rotation differently
    if [ -n "${rot}" ] ; then
        if [ ${longitude} -gt 0 ] ; then
            longstart=$((${longitude} - 360))
        else
            longstart=${longitude}
        fi
        longend=$((${longstart} + 360))
        (
            while [ 1 ] ; do
                for longitude in $(seq ${longstart} ${incremental} ${longend}) ; do
                    if [ -z "${gnome}" ] ; then
                        eval "${cmd} -num_times ${numtimes} ${addons} $@"
                    else
                        _gnomebg
                    fi
                done
            done
        ) & >/dev/null 2>&1
    else
        # just run normal modes
        (
            if [ -z "${gnome}" ] ; then
                eval "${cmd} -num_times ${numtimes} ${addons} $@"
            else
                _gnomebg
            fi
        ) & >/dev/null 2>&1
    fi
else
    eval "${cmd} $@"
fi

#===============================================================================
# End of File
#===============================================================================
