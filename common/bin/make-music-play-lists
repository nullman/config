#!/usr/bin/env bash
#===============================================================================
# make-music-play-lists
#
# Make singles and ablums music play lists.
#
# It should be run from a cron job.
#
# Author: Kyle W T Sherman
#===============================================================================

genres=("Classic%Rock" "Classical%-%Instrumental" "Country" "Hard%Rock" "Pop%-%Dance" "R&B" "Rap" "Reggae" "Rock%-%Alternative" "Techno%-%Electronic")

tmpfile="__temp__"

musicdir="/home/data/media/Audio/Music"  # music directory
pldir="/home/data/media/Audio/Playlists" # play list directory
ratingsdir="${HOME}/.song-ratings"       # ratings directory

#===============================================================================
# setup
#===============================================================================

if [[ ! -d "${musicdir}" ]] ; then
    echo "Error: Could not find music directory: ${musicdir}"
    exit 1
fi
pushd "${musicdir}" > /dev/null 2>&1

#===============================================================================
# albums
#===============================================================================

[[ -f "${pldir}/${tmpfile}" ]] && rm -f "${pldir}/${tmpfile}"
for d in Albums ; do
    for gn in ${genres[@]} ; do
        gd=$(echo "${gn}" | sed "s/\%/ /g")
        find "${d}/${gd}/" -type f >> "${pldir}/${tmpfile}"
    done
done

if [[ -f "${pldir}/${tmpfile}" ]] ; then
    cat "${pldir}/${tmpfile}" | sort > "${pldir}/raw_albums.m3u"
    cat "${pldir}/raw_albums.m3u" > "${pldir}/raw_all.m3u"
fi

#===============================================================================
# singles
#===============================================================================

[[ -f "${pldir}/${tmpfile}" ]] && rm -f "${pldir}/${tmpfile}"
for d in Singles ; do
    for gn in ${genres[@]} ; do
        gd=$(echo "${gn}" | sed 's/\%/ /g')
        find "${d}/${gd}/" -type f >> "${pldir}/${tmpfile}"
    done
done

if [[ -f "${pldir}/${tmpfile}" ]] ; then
    cat "${pldir}/${tmpfile}" | sort > "${pldir}/raw_singles.m3u"
    cat "${pldir}/raw_singles.m3u" >> "${pldir}/raw_all.m3u"
fi

#===============================================================================
# sort all
#===============================================================================

cat "${pldir}/raw_all.m3u" > "${pldir}/${tmpfile}"
mv "${pldir}/${tmpfile}" "${pldir}/raw_all.m3u"

#===============================================================================
# genres
#===============================================================================

rm "${pldir}/genre_"*.m3u
for d in Albums Singles ; do
    for gn in $(find "${d}/" -mindepth 1 -maxdepth 1 -type d -exec basename {} \; | sed 's/ /\%/g') ; do
        [[ -f "${pldir}/${tmpfile}" ]] && rm -f "${pldir}/${tmpfile}"
        gd=$(echo "${gn}" | sed "s/\%/ /g")
        find "${d}/${gd}/" -type f >> "${pldir}/${tmpfile}"
        n=$(echo "${gn}" | tr '[:upper:]' '[:lower:]' | sed 's/\%/_/g ; s/_-_/-/g')
        [[ -e "${pldir}/${tmpfile}" ]] && cat "${pldir}/${tmpfile}" | sort >> "${pldir}/genre_${n}.m3u"
    done
done

#===============================================================================
# windows versions and copy files to public directory
#===============================================================================

# cat "${pldir}/raw_albums.m3u" | sed 's/^\/\_links\/music\//N\:\\/' | sed 's/\//\\/g' > "${pldir}/win_albums.m3u"
# cat "${pldir}/raw_singles.m3u" | sed 's/^\/_links\/music\//N\:\\/' | sed 's/\//\\/g' > "${pldir}/win_singles.m3u"
# cat "${pldir}/raw_all.m3u" | sed 's/^\/_links\/music\//N\:\\/' | sed 's/\//\\/g' > "${pldir}/win_all.m3u"

#===============================================================================
# sorted versions
#===============================================================================

cat "${pldir}/raw_albums.m3u" | sort -t / -k 3 > "${pldir}/sorted_albums.m3u"
cat "${pldir}/raw_singles.m3u" | sort -t / -k 3 > "${pldir}/sorted_singles.m3u"
cat "${pldir}/raw_all.m3u" | sort -t / -k 3 > "${pldir}/sorted_all.m3u"

#===============================================================================
# copy files to public directory
#===============================================================================

# cp "${pldir}/raw_albums.m3u" "${pubdir}/raw_albums.m3u"
# cp "${pldir}/raw_singles.m3u" "${pubdir}/raw_singles.m3u"
# cp "${pldir}/raw_all.m3u" "${pubdir}/raw_all.m3u"
# cp "${pldir}/sorted_albums.m3u" "${pubdir}/sorted_albums.m3u"
# cp "${pldir}/sorted_singles.m3u" "${pubdir}/sorted_singles.m3u"
# cp "${pldir}/sorted_all.m3u" "${pubdir}/sorted_all.m3u"
# cp "${pldir}/win_albums.m3u" "${pubdir}/win_albums.m3u"
# cp "${pldir}/win_singles.m3u" "${pubdir}/win_singles.m3u"
# cp "${pldir}/win_all.m3u" "${pubdir}/win_all.m3u"

#===============================================================================
# custom playlists
#===============================================================================

# recent additions list
find Singles -name "*\.mp3" -mtime -90 -print | sort -t / -k 3 > "${pldir}/recently_added_03mo.m3u"
find Albums -name "*\.mp3" -mtime -90 -print | sort -t / -k 3 >> "${pldir}/recently_added_03mo.m3u"
find Singles -name "*\.mp3" -mtime -180 -print | sort -t / -k 3 > "${pldir}/recently_added_06mo.m3u"
find Albums -name "*\.mp3" -mtime -180 -print | sort -t / -k 3 >> "${pldir}/recently_added_06mo.m3u"
find Singles -name "*\.mp3" -mtime -365 -print | sort -t / -k 3 > "${pldir}/recently_added_12mo.m3u"
find Albums -name "*\.mp3" -mtime -365 -print | sort -t / -k 3 >> "${pldir}/recently_added_12mo.m3u"
find Singles -name "*\.mp3" -mtime -548 -print | sort -t / -k 3 > "${pldir}/recently_added_18mo.m3u"
find Albums -name "*\.mp3" -mtime -548 -print | sort -t / -k 3 >> "${pldir}/recently_added_18mo.m3u"
find Singles -name "*\.mp3" -mtime -730 -print | sort -t / -k 3 > "${pldir}/recently_added_24mo.m3u"
find Albums -name "*\.mp3" -mtime -730 -print | sort -t / -k 3 >> "${pldir}/recently_added_24mo.m3u"

# ratings lists (in random order)
echo -n "" > "${pldir}/rated_normal.m3u"
echo -n "" > "${pldir}/rated_good.m3u"
echo -n "" > "${pldir}/rated_all.m3u"
for r in $(seq 1 5) ; do
    cp "${ratingsdir}/songs-rated-${r}" "${pldir}/rated_${r}.m3u"
    [[ ${r} -ge 3 ]] && cat "${ratingsdir}/songs-rated-${r}" | sort --random-sort >> "${pldir}/rated_normal.m3u"
    [[ ${r} -ge 4 ]] && cat "${ratingsdir}/songs-rated-${r}" | sort --random-sort >> "${pldir}/rated_good.m3u"
    cat "${ratingsdir}/songs-rated-${r}" | sort --random-sort >> "${pldir}/rated_all.m3u"
done

# unrated list
echo -n "" > "${pldir}/unrated.m3u"
while read s ; do
    d=$(grep -F "${s}" "${pldir}/rated_all.m3u")
    [[ -z "${d}" ]] && echo "${s}" >> "${pldir}/unrated.m3u"
done < "${pldir}/sorted_all.m3u"

# randomize some playlists
for s in "rated_normal.m3u" "rated_good.m3u" "rated_all.m3u" "unrated.m3u" ; do
    cp "${pldir}/${s}" "${pldir}/${tmpfile}" && \
        cat "${pldir}/${tmpfile}" | sort --random-sort > "${pldir}/${s}"
done

# rated good and unrated interleaved
paste -d '\n' "${pldir}/rated_normal.m3u" "${pldir}/unrated.m3u" | sed '/^$/d' > "${pldir}/unrated_and_rated_normal.m3u"

#===============================================================================
# clean up
#===============================================================================

[[ -f "${pldir}/${tmpfile}" ]] && rm -f "${pldir}/${tmpfile}"

popd > /dev/null 2>&1

#===============================================================================
# End of File
#===============================================================================
