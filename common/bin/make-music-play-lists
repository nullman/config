#!/usr/bin/env bash
#===============================================================================
# make-music-play-lists
#
# Make singles and ablums music play lists.
#
# It should be run from a cron job.
#
# Author: Kyle W T Sherman <kylewsherman@gmail.com>
#===============================================================================

#genres=("Classic%Rock" "Classical%-%Instrumental" "Country" "Hard%Rock" "Pop%-%Dance" "R&B" "Rap" "Reggae" "Rock%-%Alternative" "Techno%-%Electronic")
genres=("Classic%Rock" "Country" "Hard%Rock" "Pop%-%Dance" "R&B" "Rap" "Reggae" "Rock%-%Alternative")

tmpfile="__tmpfile__"

musicdir="/home/data/media/Audio/MPD"    # music directory
pldir="/home/data/media/Audio/Playlists" # play list directory
ratingsdir="${HOME}/.song-ratings"       # ratings directory

#===============================================================================
# setup
#===============================================================================

if [[ ! -d "${musicdir}" ]] ; then
    echo "Error: Could not find music directory: ${musicdir}"
    exit 1
fi
pushd "${musicdir}" >/dev/null 2>&1

#===============================================================================
# albums and singles (in random order)
#===============================================================================

rm -f "${pldir}/raw_albums.m3u"
rm -f "${pldir}/raw_singles.m3u"
rm -f "${pldir}/raw_all.m3u"

for gn in ${genres[@]} ; do
    gd="${gn//\%/ }"
    find "Albums/${gd}/" -type f >> "${pldir}/raw_albums.m3u"
    find "Singles/${gd}/" -type f >> "${pldir}/raw_singles.m3u"
done
for file in albums singles ; do
    sort --random-sort < "${pldir}/raw_${file}.m3u" > "${pldir}/${tmpfile}"
    mv "${pldir}/${tmpfile}" "${pldir}/raw_${file}.m3u"
    cat "${pldir}/raw_${file}.m3u" >> "${pldir}/raw_all.m3u"
done

sort --random-sort < "${pldir}/raw_all.m3u" > "${pldir}/${tmpfile}"
mv "${pldir}/${tmpfile}" "${pldir}/raw_all.m3u"

#===============================================================================
# windows versions
#===============================================================================

# sed 's/^\/\_links\/music\//N\:\\/ ; s/\//\\/g' "${pldir}/raw_albums.m3u" > "${pldir}/win_albums.m3u"
# sed 's/^\/_links\/music\//N\:\\/ ; s/\//\\/g' "${pldir}/raw_singles.m3u" > "${pldir}/win_singles.m3u"
# sed 's/^\/_links\/music\//N\:\\/ ; s/\//\\/g' "${pldir}/raw_all.m3u" > "${pldir}/win_all.m3u"

#===============================================================================
# albums and singles (in sorted order)
#===============================================================================

sort -t / -k 3 < "${pldir}/raw_albums.m3u" > "${pldir}/sorted_albums.m3u"
sort -t / -k 3 < "${pldir}/raw_singles.m3u" > "${pldir}/sorted_singles.m3u"
sort -t / -k 3 < "${pldir}/raw_all.m3u" > "${pldir}/sorted_all.m3u"

#===============================================================================
# genres
#===============================================================================

rm -f "${pldir}/genre_"*.m3u
for d in Albums Singles MODs ; do
    for gn in $(find "${d}/" -mindepth 1 -maxdepth 1 -type d -exec basename {} \; | sed 's/ /\%/g') ; do
        rm -f "${pldir}/${tmpfile}"
        #gd=$(echo "${gn}" | sed "s/\%/ /g")
        gd="${gn//\%/ }"
        find "${d}/${gd}/" -type f >> "${pldir}/${tmpfile}"
        n=$(echo "${gn}" | tr '[:upper:]' '[:lower:]' | sed 's/\%/_/g ; s/_-_/-/g')
        [[ -e "${pldir}/${tmpfile}" ]] && sort -t / -k 3 < "${pldir}/${tmpfile}" >> "${pldir}/genre_${n}.m3u"
    done
done

#===============================================================================
# custom playlists
#===============================================================================

# recent additions list
find Singles -name "*\.mp3" -mtime -90 -print | sort -t / -k 3 > "${pldir}/recently_added_03mo.m3u"
find Albums -name "*\.mp3" -mtime -90 -print | sort -t / -k 3 >> "${pldir}/recently_added_03mo.m3u"
find Singles -name "*\.mp3" -mtime -180 -print | sort -t / -k 3 > "${pldir}/recently_added_06mo.m3u"
find Albums -name "*\.mp3" -mtime -180 -print | sort -t / -k 3 >> "${pldir}/recently_added_06mo.m3u"
find Singles -name "*\.mp3" -mtime -365 -print | sort -t / -k 3 > "${pldir}/recently_added_12mo.m3u"
find Albums -name "*\.mp3" -mtime -365 -print | sort -t / -k 3 >> "${pldir}/recently_added_12mo.m3u"
find Singles -name "*\.mp3" -mtime -548 -print | sort -t / -k 3 > "${pldir}/recently_added_18mo.m3u"
find Albums -name "*\.mp3" -mtime -548 -print | sort -t / -k 3 >> "${pldir}/recently_added_18mo.m3u"
find Singles -name "*\.mp3" -mtime -730 -print | sort -t / -k 3 > "${pldir}/recently_added_24mo.m3u"
find Albums -name "*\.mp3" -mtime -730 -print | sort -t / -k 3 >> "${pldir}/recently_added_24mo.m3u"

# ratings lists (in random order)
rm "${pldir}/rated_normal.m3u"
rm "${pldir}/rated_good.m3u"
rm "${pldir}/rated_all.m3u"
for r in $(seq 1 5) ; do
    sort -t / -k 3 < "${ratingsdir}/songs-rated-${r}" | grep '\.mp3$' > "${pldir}/rated_${r}.m3u"
    [[ ${r} -ge 3 ]] && cat "${ratingsdir}/songs-rated-${r}" | grep '\.mp3$' >> "${pldir}/rated_normal.m3u"
    [[ ${r} -ge 4 ]] && cat "${ratingsdir}/songs-rated-${r}" | grep '\.mp3$' >> "${pldir}/rated_good.m3u"
    cat "${ratingsdir}/songs-rated-${r}" | grep '\.mp3$' >> "${pldir}/rated_all.m3u"
done

# unrated list
rm -f "${pldir}/unrated.m3u"
while read s ; do
    d=$(grep -F "${s}" "${pldir}/rated_all.m3u")
    [[ -z "${d}" ]] && echo "${s}" >> "${pldir}/unrated.m3u"
done < "${pldir}/raw_all.m3u"

# randomize some playlists
for s in "rated_normal.m3u" "rated_good.m3u" "rated_all.m3u" "unrated.m3u" ; do
    sort --random-sort < "${pldir}/${s}" > "${pldir}/${tmpfile}"
    mv "${pldir}/${tmpfile}" "${pldir}/${s}"
done

# rated good and unrated interleaved
paste -d '\n' "${pldir}/rated_normal.m3u" "${pldir}/unrated.m3u" | sed '/^$/d' > "${pldir}/unrated_and_rated_normal.m3u"

#===============================================================================
# clean up
#===============================================================================

rm -f "${pldir}/${tmpfile}"

popd >/dev/null 2>&1

#===============================================================================
# End of File
#===============================================================================
