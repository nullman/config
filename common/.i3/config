#===============================================================================
# config
#
# Configuration for i3 Window Manager.
#
# i3 config file (v4)
#
# Reference: http://i3wm.org/docs/userguide.html
#===============================================================================

#-------------------------------------------------------------------------------
# General
#-------------------------------------------------------------------------------

set $alt Mod1
set $super Mod4

# # emacs like key bindings to use instead of the arrow keys
# set $up p
# set $down n
# set $left b
# set $right f
# # vi like key bindings to use instead of the arrow keys
# set $up l
# set $down k
# set $left j
# set $right semicolon
# custom key bindings to use instead of the arrow keys
set $up i
set $down k
set $left j
set $right l

# default desktop layout <default|stacking|tabbed> (default is tiled)
workspace_layout default

# border style <normal|1pixel|pixel xx|none|pixel>
default_border normal
default_floating_border normal

# hide container edge borders if only one is visible
hide_edge_borders smart

# change borders
#bindsym $super+y border none
#bindsym $super+u border pixel 1
#bindsym $super+i border normal

# font for window titles and bar (unless overridden)
#font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1 # limited unicode glyph coverage and does not scale
#font pango:monospace 8
#font pango:DejaVu Sans Mono 8 # good unicode glyph coverage
#font xft:URWGothic-Book 11
#font xft:Droid Sans Mono 12
#font pango:System San Francisco Display 12
font pango:MesloLGS Nerd Font Mono 10

# use Mouse+$super to drag floating windows to their wanted position
floating_modifier $super

# focus follows mouse <yes|no>
focus_follows_mouse no

# jump back to original workspace by toggling the new one a second time
workspace_auto_back_and_forth yes

# delay clearing the workspace urgency hint
force_display_urgency_hint 500 ms

#-------------------------------------------------------------------------------
# Key Bindings
#-------------------------------------------------------------------------------

# start a terminal
bindsym $super+Return exec alacritty
#bindsym $super+$alt+t exec alacritty

# kill focused window
bindsym $super+Shift+w kill

# program launcher
bindsym $super+$alt+d exec --no-startup-id rofi -show run
bindsym $super+$alt+space exec --no-startup-id rofi -show drun

# categorized menu
#bindsym $super+$alt+z exec --no-startup-id morc_menu

# cli configuration tool
#bindsym $super+Shift+b exec terminal -e 'bmenu'

# change focus
bindsym $super+Left focus left
bindsym $super+$left focus left
bindsym $super+Down focus down
bindsym $super+$down focus down
bindsym $super+Up focus up
bindsym $super+$up focus up
bindsym $super+Right focus right
bindsym $super+$right focus right

# move focused window
bindsym $super+Shift+Left move left
bindsym $super+Shift+$left move left
bindsym $super+Shift+Down move down
bindsym $super+Shift+$down move down
bindsym $super+Shift+Up move up
bindsym $super+Shift+$up move up
bindsym $super+Shift+Right move right
bindsym $super+Shift+$right move right

# split in horizontal orientation
bindsym $super+Control+h split horizontal

# split in vertical orientation
bindsym $super+Control+v split vertical

# enter fullscreen mode for the focused container
bindsym $super+Control+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $super+Control+1 layout stacking
bindsym $super+Control+2 layout tabbed
bindsym $super+Control+3 layout toggle split
bindsym $super+Control+4 layout toggle
bindsym $super+Control+5 layout toggle all

# toggle tiling / floating
#bindsym $super+Control+space floating toggle

# change focus between tiling / floating windows
#bindsym $super+Control+Shift+space focus mode_toggle

# toggle sticky
#bindsym $super+Control+s sticky toggle

# focus the parent container
#bindsym $super+Shift+a focus parent

# focus the child container
#bindsym $super+Control+a focus child

# show the next scratchpad window or hide the focused scratchpad window
# if there are multiple scratchpad windows, this command cycles through them
# bindsym $super+minus scratchpad show
bindsym $super+Shift+grave move scratchpad
bindsym $super+grave scratchpad show

#-------------------------------------------------------------------------------
# Key Bindings: Workspaces
#-------------------------------------------------------------------------------

# set $workspace1 "1 Term"
# set $workspace2 "2 Edit"
# set $workspace3 "3 Soc"
# set $workspace4 "4 Firefox"
# set $workspace5 "5 File"
# set $workspace6 "6 Dev"
# set $workspace7 "7 ?"
# set $workspace8 "8 ?"
# set $workspace9 "9 ?"
# set $workspace10 "10 Music"

# terminal
set $workspace1 "1 ÔÑ†"
# editor
#set $workspace2 "2 Œ£"
#set $workspace2 "2 Ôââ"
#set $workspace2 "2 ÔÅÑ"
set $workspace2 "2 ÔÉ∂"
# social
#set $workspace3 "3 #"
#set $workspace3 "3 Ôá†"
#set $workspace3 "3 Ôáó"
#set $workspace3 "3 ÔÜò"
set $workspace3 "3 ÔÅµ"
# firefox
set $workspace4 "4 Ôâ©"
# files
set $workspace7 "5 ÔÅª"
# development (ide)
set $workspace6 "6 ÔÑ°"
# other
set $workspace9 "7 ÔÑ®"
set $workspace9 "8 ÔÑ®"
set $workspace9 "9 ÔÑ®"
# music
#set $workspace10 "10 Ôéµ"
set $workspace10 "10 üéµ"

# chromium
#set $workspace5 "5 Ôâ®"
# books/news
#set $workspace8 "8 Ôá™"

# switch to workspace next / previous
#bindsym $super+Ctrl+Left workspace prev
#bindsym $super+Ctrl+Right workspace next
bindsym $super+$alt+Left workspace prev
bindsym $super+$alt+$left workspace prev
bindsym $super+$alt+Right workspace next
bindsym $super+$alt+$right workspace next
bindsym $alt+Tab workspace next
bindsym $alt+Shift+Tab workspace prev
bindsym $super+Tab workspace next
bindsym $super+Shift+Tab workspace prev

# switch to workspace number
bindsym $super+1 workspace $workspace1
bindsym $super+2 workspace $workspace2
bindsym $super+3 workspace $workspace3
bindsym $super+4 workspace $workspace4
bindsym $super+5 workspace $workspace5
bindsym $super+6 workspace $workspace6
bindsym $super+7 workspace $workspace7
bindsym $super+8 workspace $workspace8
bindsym $super+9 workspace $workspace9
bindsym $super+0 workspace $workspace10

# move focused container to workspace next / previous
bindsym $super+Control+Shift+Left move container to workspace prev ; workspace prev
bindsym $super+Control+Shift+$left move container to workspace prev ; workspace prev
bindsym $super+Control+Shift+Right move container to workspace next ; workspace next
bindsym $super+Control+Shift+$right move container to workspace next ; workspace next
#bindsym $super+Shift+$alt+Left move container to workspace prev ; workspace prev
#bindsym $super+Shift+$alt+Right move container to workspace next ; workspace next

# move focused container to workspace number
bindsym $super+Shift+1 move container to workspace $workspace1 ; workspace $workspace1
bindsym $super+Shift+2 move container to workspace $workspace2 ; workspace $workspace2
bindsym $super+Shift+3 move container to workspace $workspace3 ; workspace $workspace3
bindsym $super+Shift+4 move container to workspace $workspace4 ; workspace $workspace4
bindsym $super+Shift+5 move container to workspace $workspace5 ; workspace $workspace5
bindsym $super+Shift+6 move container to workspace $workspace6 ; workspace $workspace6
bindsym $super+Shift+7 move container to workspace $workspace7 ; workspace $workspace7
bindsym $super+Shift+8 move container to workspace $workspace8 ; workspace $workspace8
bindsym $super+Shift+9 move container to workspace $workspace9 ; workspace $workspace9
bindsym $super+Shift+0 move container to workspace $workspace10 ; workspace $workspace10

# move to urgent window
bindsym $super+Shift+space [urgent=latest] focus

# switch to workspace with urgent window automatically
#for_window [urgent=latest] focus

# activate HDMI monitor above primary
bindsym $super+$alt+Shift+6 exec --no-startup-id monitors=($(xrandr | grep ' connected ' | sed 's/ .*//')) && xrandr --output ${monitors[1]} --auto --above ${monitors[0]}
bindsym $super+$alt+6 exec --no-startup-id xrandr --auto

#-------------------------------------------------------------------------------
# Key Bindings: Reload / Refresh / Logout / Lock Screen
#-------------------------------------------------------------------------------

# reload the configuration file
bindsym $super+Shift+c reload

# restart i3 inplace (preserves layout/session, can be used to upgrade i3)
bindsym $super+Shift+r restart

# exit i3 (log out of X session)
#bindsym $super+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
#bindsym $super+Shift+e exec sh -c "[[ $(echo -e \"NO\nYES\" | dmenu -sb '#ff6600' -i -p 'Really exit i3 X session?') == 'YES' ]] && i3-msg exit"
bindsym $super+Shift+e mode "$mode_exit"
set $mode_exit Really exit i3 X session?  (y)es  (n)o
mode "$mode_exit" {
     bindsym y exit

     # cancel with "n", Enter, or Escape
     bindsym n mode "default"
     bindsym Return mode "default"
     bindsym Escape mode "default"
}

# lock screen
bindsym $super+$alt+x exec sh -c "[[ -n \"$(ps aux | grep -v grep | grep xscreensaver)\" ]] && xscreensaver-command -lock || blurlock"

# set shut down, restart, and locking features
bindsym $super+Shift+x mode "$mode_system"
set $mode_system (l)ock  (e)xit  switch_(u)ser  (s)uspend  (h)ibernate  (r)eboot  (Shift+s)hutdown
mode "$mode_system" {
     bindsym l exec --no-startup-id i3exit lock, mode "default"
     bindsym s exec --no-startup-id i3exit suspend, mode "default"
     bindsym u exec --no-startup-id i3exit switch_user, mode "default"
     bindsym e exec --no-startup-id i3exit logout, mode "default"
     bindsym h exec --no-startup-id i3exit hibernate, mode "default"
     bindsym r exec --no-startup-id i3exit reboot, mode "default"
     bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

     # exit with Enter or Escape
     bindsym Return mode "default"
     bindsym Escape mode "default"
}

#-------------------------------------------------------------------------------
# Resize Windows
#-------------------------------------------------------------------------------

# resize window (you can also use the mouse for that)
bindsym $super+Control+r mode "resize"
mode "resize" {
     # these bindings trigger as soon as you enter the resize mode

     # left to decrypt window width
     bindsym Left resize shrink width 10 px or 10 ppt
     bindsym $left resize shrink width 10 px or 10 ppt
     # down to increase window height
     bindsym Down resize grow height 10 px or 10 ppt
     bindsym $down resize grow height 10 px or 10 ppt
     # up to decrease window height
     bindsym Up resize shrink height 10 px or 10 ppt
     bindsym $up resize shrink height 10 px or 10 ppt
     # right to increase window width
     bindsym Right resize grow width 10 px or 10 ppt
     bindsym $right resize grow width 10 px or 10 ppt

     # exit with Enter or Escape
     bindsym Return mode "default"
     bindsym Escape mode "default"
}

#-------------------------------------------------------------------------------
# Media Controls
#-------------------------------------------------------------------------------

# pulse audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume $(pactl info | grep '^Default Sink: ' | sed 's/^Default Sink: //') +5% ; exec notify-send 'Volume Up'     # increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume $(pactl info | grep '^Default Sink: ' | sed 's/^Default Sink: //') -5% ; exec notify-send 'Volume Down'   # decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute $(pactl info | grep "^Default Sink: " | sed 's/^Default Sink: //') toggle ; exec notify-send 'Toggle Mute'         # mute sound
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute $(pactl info | grep "^Default Source: " | sed 's/^Default Source: //') toggle ; exec notify-send 'Toggle Mic' # mute mic

# sreen brightness controls
bindsym XF86MonBrightnessUp exec --no-startup-id xbacklight -inc 10 ; exec notify-send 'Brightness Up'     # increase screen brightness
bindsym XF86MonBrightnessDown exec --no-startup-id xbacklight -dec 10 ; exec notify-send 'Brightness Down' # decrease screen brightness

# touchpad controls
bindsym XF86TouchpadToggle exec --no-startup-id touchpad-toggle ; exec notify-send 'Toggle Touchpad' # toggle touchpad

# media player controls
bindsym XF86AudioPlay exec --no-startup-id playerctl play ; exec notify-send 'Play Audio'        # play audio
bindsym XF86AudioPause exec --no-startup-id playerctl pause ; exec notify-send 'Pause Audio'     # pause audio
bindsym XF86AudioNext exec --no-startup-id playerctl next ; exec notify-send 'Next Song'         # jump to next song
bindsym XF86AudioPrev exec --no-startup-id playerctl previous ; exec notify-send 'Previous Song' # jump to previous song

#-------------------------------------------------------------------------------
# Color Palette
#-------------------------------------------------------------------------------

# color palette used for the terminal (~/.Xresources file)
set_from_resource $term_background  background
set_from_resource $term_foreground  foreground
set_from_resource $term_cursorColor cursorColor
set_from_resource $term_color0      color0
set_from_resource $term_color1      color1
set_from_resource $term_color2      color2
set_from_resource $term_color3      color3
set_from_resource $term_color4      color4
set_from_resource $term_color5      color5
set_from_resource $term_color6      color6
set_from_resource $term_color7      color7
set_from_resource $term_color8      color8
set_from_resource $term_color9      color9
set_from_resource $term_color10     color10
set_from_resource $term_color11     color11
set_from_resource $term_color12     color12
set_from_resource $term_color13     color13
set_from_resource $term_color14     color14
set_from_resource $term_color15     color15

# # theme colors
# # class                 border  backgr  text    indic   child_border
# client.focused          #556064 #556064 #80fff9 #fdf6e3
# client.focused_inactive #2f3d44 #2f3d44 #1abc9c #454948
# client.unfocused        #2f3d44 #2f3d44 #1abc9c #454948
# client.urgent           #cb4b16 #fdf6e3 #1abc9c #268bd2
# client.placeholder      #000000 #0c0c0c #ffffff #000000
# client.background       #2b2c2b

# adapta-nokto-eta-maia theme
# https://github.com/adapta-project/adapta-gtk-theme
set $focused_bg   #364046
set $focused_fg   #cfd8dc
set $unfocused_bg #222d32
set $unfocused_fg #8fa2ab
set $urgent_bg    #e53935
set $place_bg     #0c0c0c
set $place_fg     #8fa2ab
set $accent       #009688
set $separator    #454947

# class                 border          background      text            indicator       child_border
client.focused          $focused_bg     $focused_bg     $focused_fg
client.focused_inactive $unfocused_bg   $unfocused_bg   $unfocused_fg
client.unfocused        $unfocused_bg   $unfocused_bg   $unfocused_fg
client.urgent           $urgent_bg      $urgent_bg      $focused_fg
client.placeholder      #000000         $place_bg       $place_fg
client.background       #000000

#-------------------------------------------------------------------------------
# i3 Bar / i3 Status Bar
#-------------------------------------------------------------------------------

# # start i3bar to display workspace bar (plus system information)
# bar {
#     i3bar_command i3bar
#     #status_command i3status
#     status_command i3blocks -c ${HOME}/.i3/i3blocks.conf
#     position bottom

#     # set primary output first (ex: 'xrandr --output eDP1 --primary')
#     #tray_output primary

#     bindsym button4 nop
#     bindsym button5 nop
#     #font xft:URWGothic-Book 11

#     colors {
#            # background #283339
#            # statusline #f9faf9
#            # separator  #454947

#            # #                  border  backgr  text
#            # focused_workspace  #f9faf9 #16a085 #292f34
#            # active_workspace   #595b5b #353836 #fdf6e3
#            # inactive_workspace #595b5b #283339 #eee8d5
#            # binding_mode       #16a085 #2c2c2c #f9faf9
#            # urgent_workspace   #16a085 #fdf6e3 #e5201d

#            background $focused_bg
#            statusline $focused_fg
#            separator  $separator

#            #                  border          background       text
#            focused_workspace  $focused_bg     $focused_bg      $focused_fg
#            active_workspace   $unfocused_bg   $unfocused_bg    $unfocused_fg
#            inactive_workspace $unfocused_bg   $unfocused_bg    $unfocused_fg
#            urgent_workspace   $urgent_bg      $urgent_bg       $focused_fg
#     }
# }

# # toggle i3status bar
# bindsym $super+Shift+m bar mode toggle

#-------------------------------------------------------------------------------
# i3 Gaps
#-------------------------------------------------------------------------------

# # set inner/outer gaps
# gaps inner 5
# gaps outer -2

# useful syntax to bind keys to changing the gap size
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# smart gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# smart borders (draw borders around container only if it is not the only
# container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to
# the edge of the screen is 0)
smart_borders on

# # Press $super+Shift+g to enter the gap mode. Choose o or i for modifying
# # outer/inner gaps. Press one of + / - (in-/decrement for current workspace)
# # or 0 (remove gaps for current workspace). If you also press Shift with
# # these keys, the change will be global for all workspaces.
# set $mode_gaps Gaps: (o) outer, (i) inner
# set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
# set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
# bindsym $super+Shift+g mode "$mode_gaps"

# mode "$mode_gaps" {
#     bindsym o      mode "$mode_gaps_outer"
#     bindsym i      mode "$mode_gaps_inner"
#     bindsym Return mode "default"
#     bindsym Escape mode "default"
# }
# mode "$mode_gaps_inner" {
#     bindsym plus  gaps inner current plus 5
#     bindsym minus gaps inner current minus 5
#     bindsym 0     gaps inner current set 0

#     bindsym Shift+plus  gaps inner all plus 5
#     bindsym Shift+minus gaps inner all minus 5
#     bindsym Shift+0     gaps inner all set 0

#     bindsym Return mode "default"
#     bindsym Escape mode "default"
# }
# mode "$mode_gaps_outer" {
#     bindsym plus  gaps outer current plus 5
#     bindsym minus gaps outer current minus 5
#     bindsym 0     gaps outer current set 0

#     bindsym Shift+plus  gaps outer all plus 5
#     bindsym Shift+minus gaps outer all minus 5
#     bindsym Shift+0     gaps outer all set 0

#     bindsym Return mode "default"
#     bindsym Escape mode "default"
# }

#-------------------------------------------------------------------------------
# Application Customizations
#-------------------------------------------------------------------------------

# open specific applications in specific windows
# use xprop to determine application classes
#assign [class="Alacritty"] $workspace1
assign [class="Emacs"] $workspace2
assign [class="Slack"] $workspace3
assign [class="Thunderbird"] $workspace3
assign [class="firefox"] $workspace4
assign [class="Chromium"] $workspace4
assign [class="pcmanfm"] $workspace5
assign [class="Thunar"] $workspace5
assign [class="Org.gnome.Nautilus"] $workspace5
assign [class="jetbrains-idea-ce"] $workspace6
assign [class="dosbox"] $workspace6
assign [class="discord"] $workspace7
#assign [class="Evince"] $workspace8
assign [class="Lollypop"] $workspace10

# open specific applications in floating mode
for_window [title="alsamixer"] floating enable border pixel 1
for_window [class="Calamares"] floating enable border normal
for_window [class="Clipgrab"] floating enable
for_window [title="File Transfer*"] floating enable
for_window [class="Galculator"] floating enable border pixel 1
for_window [class="GParted"] floating enable border normal
for_window [class="(?i)gsimplecal"] floating enable
for_window [title="gxmessage"] floating enable border pixel 1
#for_window [title="i3_help"] floating enable sticky enable border normal
#for_window [class="jetbrains-idea-ce"] fullscreen enable border normal
for_window [class="Lightdm-gtk-greeter-settings"] floating enable
for_window [class="Lxappearance"] floating enable sticky enable border normal
for_window [class="Manjaro-hello"] floating enable
for_window [class="Manjaro Settings Manager"] floating enable border normal
for_window [title="MuseScore: Play Panel"] floating enable
for_window [class="Nitrogen"] floating enable sticky enable border normal
for_window [class="Oblogout"] fullscreen enable
for_window [class="octopi"] floating enable
for_window [title="About Pale Moon"] floating enable
for_window [class="Pamac-manager"] floating enable
for_window [class="Pavucontrol"] floating enable
for_window [class="qt5ct"] floating enable sticky enable border normal
for_window [class="Qtconfig-qt4"] floating enable sticky enable border normal
for_window [class="Simple-scan"] floating enable border normal
for_window [class="(?i)System-config-printer.py"] floating enable border normal
for_window [class="Skype"] floating enable border normal
for_window [class="Thus"] floating enable border normal
for_window [class="Timeset-gui"] floating enable border normal
for_window [class="(?i)virtualbox"] floating enable border normal
for_window [class="Xfburn"] floating enable

#-------------------------------------------------------------------------------
# System
#-------------------------------------------------------------------------------

# initialize sound
# exec --no-startup-id volumeicon
# #bindsym $super+Ctrl+m exec terminal -e 'alsamixer'
# bindsym $super+$alt+m exec terminal -e 'alsamixer'
exec --no-startup-id pulseaudio
#bindsym $super+Ctrl+m exec pavucontrol
bindsym $super+$alt+m exec pavucontrol

# other
#bindsym $super+F2 exec palemoon
#bindsym $super+F3 exec pcmanfm
#bindsym $super+F3 exec thunar
#bindsym $super+F3 exec ranger
#bindsym $super+Shift+F3 exec gksu pcmanfm
#bindsym $super+Shift+F3 exec gksu thunar
#bindsym $super+F5 exec terminal -e 'mocp'
#bindsym $super+t exec --no-startup-id pkill -x -f -u ${USER} $(realpath $(which compton))
#bindsym $super+Ctrl+t exec --no-startup-id compton -b
#bindsym $super+Shift+d --release exec "pkill -x -f -u ${USER} $(realpath $(which dunst)) ; exec notify-send 'Reconfiguring Dunst'"

# screen snapshots
bindsym Print exec --no-startup-id i3-scrot # full screen snapshot
bindsym $super+Print --release exec --no-startup-id i3-scrot -w # window snapshot
bindsym $super+Shift+Print --release exec --no-startup-id i3-scrot -s # ??? snapshot

# help
bindsym $super+Shift+h exec xdg-open /usr/share/doc/manjaro/i3_help.pdf

# kill application having window
#bindsym $super+Ctrl+k --release exec --no-startup-id xkill
bindsym $super+$alt+k --release exec --no-startup-id xkill

#-------------------------------------------------------------------------------
# Standard Applications
#-------------------------------------------------------------------------------

# gnome policykit authentation agent
#[[ -x /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 ]] && exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
# gnome keyring
# eval "$(gnome-keyring-daemon --start --components=pkcs11,secrets,ssh,gpg)" &
# lx policykit authentation agent
# lxpolkit &

# compositor
# compton -c &
exec --no-startup-id picom -c

# system bar
exec --no-startup-id source "${HOME}/bin/system-bar"

# system wallpaper displays
exec --no-startup-id source "${HOME}/bin/system-wallpaper-displays"

# # autostart standard applications
# #exec --no-startup-id ssh-agent
# #exec --no-startup-id ssh-add
# #exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
# #exec --no-startup-id nitrogen --restore
# exec --no-startup-id nm-applet
# exec --no-startup-id xfce4-power-manager
# exec --no-startup-id pamac-tray
# exec --no-startup-id pa-applet
# exec --no-startup-id clipit
# #exec --no-startup-id blueman-applet
# #exec_always --no-startup-id sbxkb
# #exec --no-startup-id start_conky_maia # background wallpaper help text
# #exec --no-startup-id conky --config=/usr/share/conky/conky_green # background wallpaper system monitor
# #exec --no-startup-id start_conky_green
# #exec --no-startup-id xautolock -time 30 -locker blurlock # lock screen after 30 minutes
# #exec_always --no-startup-id ff-theme-util
# #exec_always --no-startup-id fix_xcursor

# full-screen task-switcher
#exec --no-startup-id skippy-xd --config "${HOME}/.config/skippy-xd/skippy-xd.rc" --start-daemon

# localize user system folders
#exec --no-startup-id xdg-user-dirs-gtk-update

# enable numlock [do not use on laptops without numpads]
#exec --no-startup-id numlockx

# screen saver
#exec --no-startup-id xautolock -time 30 -locker blurlock # lock screen after 30 minutes

# tell firefox to match theme
#exec --no-startup-id ff-theme-util

# clipmenu
exec --no-startup-id clipmenud

# eject-applet
#exec --no-startup-id eject-applet

# set cursor theme
exec --no-startup-id fix_xcursor

# hide mouse when not in use
exec --no-startup-id unclutter

# wallpaper manager
exec --no-startup-id nitrogen --restore

# rebuild wm menu
#sleep 10 && exec --no-startup-id mmaker --force openbox

#-------------------------------------------------------------------------------
# Custom Applications
#-------------------------------------------------------------------------------

# switch to workspace 1
exec --no-startup-id i3-msg "workspace $workspace1"

# auto-start custom applications
exec --no-startup-id "source ${HOME}/.i3applications"

#===============================================================================
# End of File
#===============================================================================
